<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edumindai.mapper.UserTopicAssociationMapper">

    <resultMap id="BaseResultMap" type="edumindai.model.entity.UserTopicAssociation">
        <id property="id" column="id" jdbcType="OTHER"/>
        <result property="userId" column="user_id" jdbcType="OTHER"/>
        <result property="topicId" column="topic_id" jdbcType="OTHER"/>
        <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
        <result property="updateAt" column="update_at" jdbcType="TIMESTAMP"/>
        <result property="title" column="title" jdbcType="OTHER"/>
    </resultMap>
    <select id="findMyTopicByUserId" resultMap="BaseResultMap">
        select id,user_id,topic_id,create_at,update_at,title
        from user_topic_association
        <where>
            user_id = #{userId}::uuid
        </where>
    </select>

    <insert id="insertTopicByUserId" parameterType="userTopicAssociation">
        insert into user_topic_association
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="topicId != null">
                topic_id,
            </if>
            <if test="title != null">
                title
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id}::uuid,
            </if>
            <if test="userId != null">
                #{userId}::uuid,
            </if>
            <if test="topicId != null">
                #{topicId}::uuid,
            </if>
            <if test="title != null">
                #{title},
            </if>
        </trim>
    </insert>

    <delete id="deleteOneByTopicId">
        delete  from user_topic_association where topic_id = #{topicId}::uuid
    </delete>

    <select id="findMyTopicByUserIdAndTopicId" resultMap="BaseResultMap">
        select id,user_id,topic_id,create_at,update_at,title
        from user_topic_association
        <where>
            user_id = #{userId}::uuid
            and topic_id = #{topicId}::uuid
        </where>
    </select>

    <sql id="Base_Column_List">
        id
        ,user_id,topic_id,
        create_at,update_at,title
    </sql>



</mapper>
